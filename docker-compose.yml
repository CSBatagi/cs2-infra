services:
  ddns:
    image: favonia/cloudflare-ddns:latest
    network_mode: host # This bypasses network isolation and makes IPv6 easier (optional; see below)
    restart: always # Restart the updater after reboot
    user: "1000:1000" # Run the updater with specific user and group IDs (in that order).
    # You can change the two numbers based on your need.
    read_only: true # Make the container filesystem read-only (optional but recommended)
    cap_drop: [all] # Drop all Linux capabilities (optional but recommended)
    security_opt: [no-new-privileges:true] # Another protection to restrict superuser privileges (optional but recommended)
    environment:
      - CLOUDFLARE_API_TOKEN=vtAwjRrcBFYpqpYR6sfvJjg6X5ehNdauTc4xCS8H
      - DOMAINS=db2.csbatagi.com
      - PROXIED=false # Tell Cloudflare to cache webpages and hide your IP (optional)
      
  # get5db:
  #   image: yobasystems/alpine-mariadb
  #   container_name: get5db
  #   restart: always
  #   labels:
  #     caddy: db2.csbatagi.com 
  #     caddy.handle_path: /db/*
  #     caddy.handle_path.0_reverse_proxy: "{{upstreams 3306}}"
  #   networks:
  #     - get5
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=4wCnXX2pf1l0L 
  #     - MYSQL_DATABASE=get5
  #     - MYSQL_USER=get5
  #     - MYSQL_PASSWORD=5TtRNWRdFqM8N
  #     - MYSQL_CHARSET=utf8mb4
  #     - MYSQL_COLLATION=utf8mb4_general_ci
  #   ports:
  #     - 3306:3306
  #   volumes:
  #     - ./get5db/mysql:/var/lib/mysql
  #
  middleware:
    build:
      context: ./pg-mw  # Path to the directory containing the Dockerfile
    ports:
      - "3000:80"  # Map container port 3000 to host port 80 
    environment:
      DB_USER: postgres
      DB_HOST: postgres # Hostname matches the service name below
      DB_DATABASE: csdm
      DB_PASSWORD: 5TtRNWRdFqM8N
      AUTH_TOKEN: your_auth_token
    labels:
      caddy: db2.csbatagi.com 
      caddy.handle_path: /*
      caddy.handle_path.0_reverse_proxy: "{{upstreams 80}}"
    depends_on:
      - postgres  # Ensure the database is started before middleware

  postgres:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: 5TtRNWRdFqM8N
    volumes:
     - ./pgdata:/var/lib/postgresql/data

  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: caddy-reverse-proxy
    restart: unless-stopped
    networks:
      - get5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=db2
    labels:
      caddy.email: csbatagi@gmail.com

volumes:
  pgdata:
    
networks:
  db2:
    external: true

